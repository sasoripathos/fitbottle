{:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :clock {:valid? true},
 :stats {:valid? true,
         :count 654,
         :ok-count 217,
         :fail-count 302,
         :info-count 135,
         :by-f {:txn {:valid? true,
                      :count 654,
                      :ok-count 217,
                      :fail-count 302,
                      :info-count 135}}},
 :exceptions {:valid? true},
 :workload {:valid? false,
            :anomaly-types (:G1a),
            :anomalies {:G1a ({:op {:type :ok,
                                    :f :txn,
                                    :value [[:append 12 35]
                                            [:r
                                             12
                                             [22 20 30 31 33 28 34 35]]
                                            [:append 7 82]
                                            [:r 4 [1 3 4 5 6]]],
                                    :time 68098321402,
                                    :process 60,
                                    :index 1097},
                               :mop [:r 4 [1 3 4 5 6]],
                               :writer {:type :fail,
                                        :f :txn,
                                        :value [[:append 4 6]],
                                        :time 33165457008,
                                        :process 40,
                                        :error :not-primary,
                                        :index 546},
                               :element 6})},
            :not #{:read-atomic :read-committed},
            :also-not #{:ROLA
                        :causal-cerone
                        :consistent-view
                        :cursor-stability
                        :forward-consistent-view
                        :monotonic-atomic-view
                        :monotonic-snapshot-read
                        :monotonic-view
                        :parallel-snapshot-isolation
                        :prefix
                        :repeatable-read
                        :serializable
                        :snapshot-isolation
                        :strong-serializable
                        :strong-session-serializable
                        :strong-session-snapshot-isolation
                        :strong-snapshot-isolation
                        :update-serializable}},
 :assert {:valid? true, :count 0, :matches ()},
 :valid? false}
